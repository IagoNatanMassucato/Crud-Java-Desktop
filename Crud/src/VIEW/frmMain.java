/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VIEW;

import CONTROLLER.PessoaController;
import MODEL.Pessoa;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Microsoft
 */
public class frmMain extends javax.swing.JFrame {
    int flag=1;

    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
        adjustColumn();
        listPessoa();
        inputBlocked();
        
        
    }
    class jPanelGradient extends JPanel{
        @Override
        protected void paintComponent(Graphics g){
            Graphics2D g2d = (Graphics2D)g;
            int width = getWidth();
            int height = getHeight();
            Color color1 = new Color(0,0,0);
            Color color2 = new Color(25,125,112);
            GradientPaint gp = new GradientPaint(0, 0, color1, 180,height,color2);
            g2d.setPaint(gp);
            g2d.fillRect(0, 0, width, height);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelDegrade = new jPanelGradient();
        jPanelFormulario = new javax.swing.JPanel();
        jTextFieldNome = new javax.swing.JTextField();
        jTextFieldCpf = new javax.swing.JTextField();
        jToggleButtonSalvar = new javax.swing.JToggleButton();
        jToggleButtonAlterar = new javax.swing.JToggleButton();
        jToggleButtonExcluir = new javax.swing.JToggleButton();
        jLabelPessoa = new javax.swing.JLabel();
        jLabelCpf = new javax.swing.JLabel();
        jLabelDataNascimento = new javax.swing.JLabel();
        jDateChooserDataNascimento = new com.toedter.calendar.JDateChooser();
        jTextFieldPID = new javax.swing.JTextField();
        jLabelPessoa1 = new javax.swing.JLabel();
        jToggleButtonCadastrar = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePessoa = new javax.swing.JTable();
        jMenuBarPrincipal = new javax.swing.JMenuBar();
        jMenuSistema = new javax.swing.JMenu();
        jMenuItemSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tela Principal ");
        setBackground(new java.awt.Color(102, 204, 255));
        setResizable(false);

        jPanelDegrade.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelFormulario.setBackground(new java.awt.Color(204, 204, 204));

        jTextFieldNome.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNomeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNomeKeyTyped(evt);
            }
        });

        jTextFieldCpf.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCpfKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCpfKeyTyped(evt);
            }
        });

        jToggleButtonSalvar.setBackground(new java.awt.Color(0, 102, 0));
        jToggleButtonSalvar.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jToggleButtonSalvar.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButtonSalvar.setText("SALVAR");
        jToggleButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonSalvarActionPerformed(evt);
            }
        });

        jToggleButtonAlterar.setBackground(new java.awt.Color(255, 102, 0));
        jToggleButtonAlterar.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jToggleButtonAlterar.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButtonAlterar.setText("ALTERAR");
        jToggleButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonAlterarActionPerformed(evt);
            }
        });

        jToggleButtonExcluir.setBackground(new java.awt.Color(204, 0, 0));
        jToggleButtonExcluir.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jToggleButtonExcluir.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButtonExcluir.setText("EXCLUIR");
        jToggleButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonExcluirActionPerformed(evt);
            }
        });

        jLabelPessoa.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelPessoa.setForeground(new java.awt.Color(0, 0, 0));
        jLabelPessoa.setText("Nome");

        jLabelCpf.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelCpf.setForeground(new java.awt.Color(0, 0, 0));
        jLabelCpf.setText("CPF");

        jLabelDataNascimento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelDataNascimento.setForeground(new java.awt.Color(0, 0, 0));
        jLabelDataNascimento.setText("Data de Nascimento");

        jDateChooserDataNascimento.setBackground(new java.awt.Color(204, 204, 204));
        jDateChooserDataNascimento.setForeground(new java.awt.Color(0, 0, 0));
        jDateChooserDataNascimento.setDateFormatString("dd/MM/yyyy");
        jDateChooserDataNascimento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabelPessoa1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelPessoa1.setForeground(new java.awt.Color(0, 0, 0));
        jLabelPessoa1.setText("PID");

        jToggleButtonCadastrar.setBackground(new java.awt.Color(0, 0, 153));
        jToggleButtonCadastrar.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jToggleButtonCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButtonCadastrar.setText("CADASTRAR");
        jToggleButtonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonCadastrarActionPerformed(evt);
            }
        });

        jTablePessoa.setBackground(new java.awt.Color(255, 255, 255));
        jTablePessoa.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTablePessoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "PID", "NOME", "CPF", "DATA NASC"
            }
        ));
        jTablePessoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePessoaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTablePessoa);

        javax.swing.GroupLayout jPanelFormularioLayout = new javax.swing.GroupLayout(jPanelFormulario);
        jPanelFormulario.setLayout(jPanelFormularioLayout);
        jPanelFormularioLayout.setHorizontalGroup(
            jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormularioLayout.createSequentialGroup()
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelFormularioLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooserDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFormularioLayout.createSequentialGroup()
                                    .addComponent(jLabelCpf)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelDataNascimento)
                                    .addGap(81, 81, 81))
                                .addGroup(jPanelFormularioLayout.createSequentialGroup()
                                    .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanelFormularioLayout.createSequentialGroup()
                                            .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanelFormularioLayout.createSequentialGroup()
                                                    .addComponent(jToggleButtonCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jToggleButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jToggleButtonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jTextFieldCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(26, 26, 26)
                                            .addComponent(jToggleButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabelPessoa1)
                                        .addComponent(jTextFieldPID, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane2))
                                    .addGap(0, 0, Short.MAX_VALUE)))))
                    .addGroup(jPanelFormularioLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPessoa)
                            .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jPanelFormularioLayout.setVerticalGroup(
            jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormularioLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPessoa1)
                    .addComponent(jLabelPessoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPID, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCpf)
                    .addComponent(jLabelDataNascimento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldCpf, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jDateChooserDataNascimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(57, 57, 57)
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButtonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButtonCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        jPanelDegrade.add(jPanelFormulario, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 880, 590));

        jMenuSistema.setText("Sistema");

        jMenuItemSobre.setText("Sobre");
        jMenuItemSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSobreActionPerformed(evt);
            }
        });
        jMenuSistema.add(jMenuItemSobre);

        jMenuBarPrincipal.add(jMenuSistema);

        setJMenuBar(jMenuBarPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelDegrade, javax.swing.GroupLayout.PREFERRED_SIZE, 1075, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDegrade, javax.swing.GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonExcluirActionPerformed
        // TODO add your handling code here:
          deleteIdPessoa();
          listPessoa();
          inputBlocked();
          jTablePessoa.setEnabled(true);        
    }//GEN-LAST:event_jToggleButtonExcluirActionPerformed

    private void jToggleButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonAlterarActionPerformed
    // TODO add your handling code here:
        listPessoa();
        inputReleased();
        jTablePessoa.setEnabled(false);
        jToggleButtonAlterar.setEnabled(false);    
        flag=2;
    }//GEN-LAST:event_jToggleButtonAlterarActionPerformed

    private void jToggleButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonSalvarActionPerformed
       // TODO add your handling code here:
       String minimum = jTextFieldCpf.getText();
        if (flag==1 && jTextFieldNome.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o Nome da Pessoa !", "Importante", 0);
            jTextFieldNome.requestFocus();
        }else if (flag==1 && jTextFieldCpf.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o CPF da Pessoa !", "Importante", 0);
            jTextFieldCpf.requestFocus();     
        }else if (flag==1 && minimum.length() < 11) {
            JOptionPane.showMessageDialog(null, "Isso não é um CPF !", "Importante", 0);
            jTextFieldCpf.requestFocus();          
        }else if (flag==1 && jDateChooserDataNascimento.getCalendar() == null) {
            JOptionPane.showMessageDialog(null, "Preencha a Data de Nascimento da Pessoa !", "Importante", 0);
        }else if (flag==1){
            saveData();
            listPessoa();
            inputBlocked();
            jTablePessoa.setEnabled(true);     
        }else if (flag==2 && jTextFieldNome.getText().equals("")){
           JOptionPane.showMessageDialog(null, "Preencha o Nome da Pessoa !", "Importante", 0);
           jTextFieldNome.requestFocus();
           jTablePessoa.setEnabled(true);
       }else if (flag==2 && jTextFieldCpf.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o CPF da Pessoa !", "Importante", 0);
            jTextFieldCpf.requestFocus();     
        }else if (flag==2 && minimum.length() < 11) {
            JOptionPane.showMessageDialog(null, "Isso não é um CPF !", "Importante", 0);
            jTextFieldCpf.requestFocus(); 
        }else if (flag==1 && jDateChooserDataNascimento.getCalendar() == null) {
            JOptionPane.showMessageDialog(null, "Preencha a Data de Nascimento da Pessoa !", "Importante", 0);
        }else if (flag==2){
           alterRegistration();
           listPessoa();
           inputBlocked();
           jTablePessoa.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(null, "Preencha os dados corretos !", "Importante", 0);
        }       
    }//GEN-LAST:event_jToggleButtonSalvarActionPerformed

    private void jTextFieldNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jTextFieldCpf.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldNomeKeyPressed

    private void jTextFieldCpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCpfKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jDateChooserDataNascimento.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldCpfKeyPressed

    private void jTextFieldCpfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCpfKeyTyped
       // TODO add your handling code here:
        try {
            String numeros = "0123456789";
            if(!numeros.contains(evt.getKeyChar()+"")){
            evt.consume();
            }  
            if(jTextFieldCpf.getText().length() >=11){
            evt.consume();
            }
        } catch (Exception error) {
            JOptionPane.showMessageDialog(null,"Problema na entrada do jTextFildCpf, Erro => " + error, "Comunique o TI", 0);
        }
    }//GEN-LAST:event_jTextFieldCpfKeyTyped

    private void jTextFieldNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeKeyTyped
        // TODO add your handling code here:
        try {
            String letras = "ABCDEFGHIJKLMNOPQRSTUVWXYZÃÇÕÁCabcdefghigklmnopqrstuvwxyzãçõá ";
            if(!letras.contains(evt.getKeyChar()+"")){
            evt.consume();
            }
        } catch (Exception error) {
             JOptionPane.showMessageDialog(null,"Problema na entrada do jTextFildNome, Erro => " + error, "Comunique o TI", 0);
        }
    }//GEN-LAST:event_jTextFieldNomeKeyTyped

    private void jToggleButtonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonCadastrarActionPerformed
        // TODO add your handling code here:
        listPessoa();
        cleanInput();
        inputReleased(); 
        jTablePessoa.setEnabled(false);
        flag=1;
    }//GEN-LAST:event_jToggleButtonCadastrarActionPerformed

    private void jTablePessoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePessoaMouseClicked
        // TODO add your handling code here:
        jToggleButtonExcluir.setEnabled(true);
        loadPID();           
    }//GEN-LAST:event_jTablePessoaMouseClicked

    private void jMenuItemSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSobreActionPerformed
        // TODO add your handling code here:
        frmSobreSistema objFrmSobreSistema = new frmSobreSistema();
        objFrmSobreSistema.setVisible(true);
    }//GEN-LAST:event_jMenuItemSobreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooserDataNascimento;
    private javax.swing.JLabel jLabelCpf;
    private javax.swing.JLabel jLabelDataNascimento;
    private javax.swing.JLabel jLabelPessoa;
    private javax.swing.JLabel jLabelPessoa1;
    private javax.swing.JMenuBar jMenuBarPrincipal;
    private javax.swing.JMenuItem jMenuItemSobre;
    private javax.swing.JMenu jMenuSistema;
    private javax.swing.JPanel jPanelDegrade;
    private javax.swing.JPanel jPanelFormulario;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablePessoa;
    private javax.swing.JTextField jTextFieldCpf;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPID;
    private javax.swing.JToggleButton jToggleButtonAlterar;
    private javax.swing.JToggleButton jToggleButtonCadastrar;
    private javax.swing.JToggleButton jToggleButtonExcluir;
    private javax.swing.JToggleButton jToggleButtonSalvar;
    // End of variables declaration//GEN-END:variables
    private void listPessoa(){
        try {
            PessoaController objPessoaController = new PessoaController();
            DefaultTableModel model = (DefaultTableModel) jTablePessoa.getModel();
            model.setNumRows(0);
            ArrayList<Pessoa> lista = objPessoaController.PesquisarPessoa();
            for(int num = 0; num < lista.size(); num ++){
                model.addRow(new Object[]{
                    lista.get(num).getIdPessoa(),
                    lista.get(num).getNome(),
                    lista.get(num).getCpf(),
                    lista.get(num).getDatanascimento()
                });
            }
        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, "VIEW, frmMain, método listPessoa() => "+error, "Comunique o TI", 0);
        }
    }
    
    private void saveData(){
        try {   
            String nome;
            long cpf;
            nome = jTextFieldNome.getText(); 
            cpf = Long.parseLong(jTextFieldCpf.getText());
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String theDate = dateFormat.format(jDateChooserDataNascimento.getDate());
            Pessoa objPessoa = new Pessoa();
            objPessoa.setNome(nome);
            objPessoa.setCpf(cpf);
            objPessoa.setDatanascimento(theDate);
            PessoaController objPessoaController = new PessoaController();   
            objPessoaController.insertPessoa(objPessoa); 
        } catch (HeadlessException | NumberFormatException error) {
            JOptionPane.showMessageDialog(null, "VIEW, frmMain, método salveDate() => "+error, "Comunique o TI", 0);
        }
    }
    
    private void cleanInput(){
        try {
            jTextFieldPID.setText("");
            jTextFieldNome.setText("");
            jTextFieldCpf.setText("");
            jDateChooserDataNascimento.setCalendar(null);
        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, "VIEW, frmMain, método cleanInput() => "+error, "Comunique o TI", 0);
        }
    }
    
    private void adjustColumn(){
        try {
            jTablePessoa.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            jTablePessoa.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTablePessoa.getColumnModel().getColumn(1).setPreferredWidth(370);
            jTablePessoa.getColumnModel().getColumn(2).setPreferredWidth(110);
            jTablePessoa.getColumnModel().getColumn(3).setPreferredWidth(100);
        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, "VIEW, frmMain, método adjustColumn() => "+error, "Comunique o TI", 0);
        }
    }
    
    private void loadPID(){
        try {
            jTablePessoa.setEnabled(true);
            int id = jTablePessoa.getSelectedRow();
            jTextFieldPID.setText(jTablePessoa.getModel().getValueAt(id, 0).toString());
            jTextFieldNome.setText(jTablePessoa.getModel().getValueAt(id, 1).toString());
            jTextFieldCpf.setText(jTablePessoa.getModel().getValueAt(id, 2).toString());
            DefaultTableModel model = (DefaultTableModel)jTablePessoa.getModel();
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(id, 3 ).toString());
            jDateChooserDataNascimento.setDate(date);    
            jToggleButtonAlterar.setEnabled(true);           
        } catch(ArrayIndexOutOfBoundsException error){
            jTablePessoa.setEnabled(false);
        } catch(ParseException error){
            JOptionPane.showMessageDialog(null, "VIEW, frmMain, método loadPID() => "+error, "Comunique o TI", 0);
        }
    }
    
    private void inputBlocked(){
        try {
            jToggleButtonCadastrar.setEnabled(true);
            jToggleButtonSalvar.setEnabled(false);
            jToggleButtonAlterar.setEnabled(false);
            jToggleButtonExcluir.setEnabled(false);
            jTextFieldPID.setEnabled(false);
            jTextFieldNome.setEnabled(false);
            jTextFieldCpf.setEnabled(false);
            jDateChooserDataNascimento.setEnabled(false);     
        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, "VIEW, frmMain, método inputBlock() => "+error, "Comunique o TI", 0);
        }
    }
    
    private void inputReleased(){
        try {
            jToggleButtonCadastrar.setEnabled(false);
            jToggleButtonSalvar.setEnabled(true);
            jToggleButtonAlterar.setEnabled(false);
            jToggleButtonExcluir.setEnabled(true);
            jTextFieldPID.setEnabled(false);
            jTextFieldNome.setEnabled(true);
            jTextFieldCpf.setEnabled(true);
            jDateChooserDataNascimento.setEnabled(true);
            jTablePessoa.setEnabled(false);
        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, "VIEW, frmMain, método inputReleased() => "+error, "Comunique o TI", 0);
        }
    }   
    
    private void alterRegistration(){
        try {
            int idPessoa;
            String nome;
            long cpf;
            idPessoa = Integer.parseInt(jTextFieldPID.getText());
            nome = jTextFieldNome.getText(); 
            cpf = Long.parseLong(jTextFieldCpf.getText());
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String theDate = dateFormat.format(jDateChooserDataNascimento.getDate());
            //DefaultTableModel model = (DefaultTableModel)jTablePessoa.getModel();
            Pessoa objPessoa = new Pessoa();
            objPessoa.setIdPessoa(idPessoa);
            objPessoa.setNome(nome);
            objPessoa.setCpf(cpf); 
            objPessoa.setDatanascimento(theDate);
            PessoaController objPessoaController = new PessoaController();
            objPessoaController.updateRegister(objPessoa);          
        } catch (NumberFormatException error) {
            JOptionPane.showMessageDialog(null, "VIEW, frmMain, método alterRegistration() => "+error, "Comunique o TI", 0);
        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, "VIEW, frmMain, método alterRegistration() => "+error, "Comunique o TI", 0);
        }    
    }
    
    private void deleteIdPessoa(){
        try {
           
           int idPessoa;
           idPessoa = Integer.parseInt(jTextFieldPID.getText());
           Pessoa objPessoa = new Pessoa();
           objPessoa.setIdPessoa(idPessoa);
           PessoaController objPessoaController = new PessoaController();
           int confirmation = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja Excluir o cadastro ?", "Confirmação", JOptionPane.YES_NO_OPTION,2);
           if(confirmation==JOptionPane.YES_OPTION){
               objPessoaController.deleteRegistration(objPessoa); 
           }else{
               System.out.println("Operação Cancelada !");  
           }        
        } catch (NumberFormatException error) {
           JOptionPane.showMessageDialog(null, "Cadastro Cancelado !", "Aviso", 1); 
           inputBlocked();
        }catch (HeadlessException error) {
           JOptionPane.showMessageDialog(null, "VIEW, frmMain, método deleteIdPessoa() => "+error, "Comunique o TI", 0);           
        }catch (Exception error) {
           JOptionPane.showMessageDialog(null, "VIEW, frmMain, método deleteIdPessoa() => "+error, "Comunique o TI", 0); 
        }             
    }
}
                
